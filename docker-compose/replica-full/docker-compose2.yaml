# See https://blog.devops.dev/setting-up-mongodb-replica-set-with-docker-compose-006f578dcdad
# $ docker exec -it primary_mongo mongo - eval "rs.initiate({_id: 'rs0', members: [{ _id: 0, host: 'primary:27017' }]})"
# $ docker exec -it primary_mongo mongo - eval "rs.add('secondary1:27017')"
# $ docker exec -it primary_mongo mongo - eval "rs.add('secondary2:27017')"

# mongodb://username:password@primary_mongo:27017,secondary1_mongo:27017,secondary2_mongo:27017/?replicaSet=rs0
version: '3'

services:
  primary:
    image: mongo:latest
    container_name: primary_mongo
    ports:
      - "27017:27017"
    volumes:
      - primary_data:/data/db
    command: mongod --replSet rs0 --bind_ip 0.0.0.0
    networks:
      - mongo-net
  
  secondary1:
    image: mongo:latest
    container_name: secondary1_mongo
    ports:
      - "27018:27017"
    volumes:
      - secondary1_data:/data/db
    command: mongod --replSet rs0 --bind_ip 0.0.0.0
    networks:
      - mongo-net
  
  secondary2:
    image: mongo:latest
    container_name: secondary2_mongo
    ports:
      - "27019:27017"
    volumes:
      - secondary2_data:/data/db
    command: mongod --replSet rs0 --bind_ip 0.0.0.0
    networks:
      - mongo-net

volumes:
  primary_data:
  secondary1_data:
  secondary2_data:

networks:
  mongo-net:
    driver: bridge